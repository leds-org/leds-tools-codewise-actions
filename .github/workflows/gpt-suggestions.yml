name: GPT Suggestions

on:
  push:
    branches:
      - main

jobs:
  suggest-improvements:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get install jq
          pip install requests

      - name: Get committer's name
        id: get-committer
        run: |
          COMMITTER_NAME=$(git log -1 --pretty=format:'%an')
          echo "COMMITTER_NAME=$COMMITTER_NAME" >> $GITHUB_ENV

      - name: Check for code files and send to GPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # Check if it's the first commit in the repository
          if [ $(git rev-list --count HEAD) -eq 1 ]; then
            # First commit: compare with the empty tree
            FILES=$(git diff --name-only 4b825dc642cb6eb9a060e54bf8d69288fbee4904 HEAD | grep -E '\.(py|js|ts|java|c|cpp|go|rb|php|cs)$')
          else
            # Subsequent commits: compare with the previous commit (HEAD^)
            FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.(py|js|ts|java|c|cpp|go|rb|php|cs)$')
          fi

          # Check if there are any code files
          if [ -n "$FILES" ]; then
            for FILE in $FILES; do
              echo "Analyzing the file: $FILE"
              CONTENT=$(cat "$FILE")

              # Print the content being sent for analysis
              #echo "Content sent for analysis: "
              #echo "$CONTENT"
              
              # Determine the language based on the file extension
              case "$FILE" in
                *.py) LANG="python" ;;
                *.js) LANG="javascript" ;;
                *.ts) LANG="typescript" ;;
                *.java) LANG="java" ;;
                *.c) LANG="c" ;;
                *.cpp) LANG="cpp" ;;
                *.go) LANG="go" ;;
                *.rb) LANG="ruby" ;;
                *.php) LANG="php" ;;
                *.cs) LANG="csharp" ;;
                *) LANG="plaintext" ;;  # Default for unknown file types
              esac
              
              REQUEST="Analyze the following '$LANG' code for performance improvements and code smells. Limit your feedback to 20 lines of concise suggestions:\n\n$CONTENT"
              #echo "Request being sent to GPT API:"
              #echo "$REQUEST"
              
              # Send the file content to the GPT API for performance and code smells analysis
              RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -H "Content-Type: application/json" \
              -d '{
                "model": "gpt-4",
                "messages": [
                  {"role": "system", "content": "You are a code analysis assistant focused on performance and code quality."},
                  {"role": "user", "content": "'"$REQUEST"'"}
                ]
              }')
              echo "Response from GPT API:"
              echo "$RESPONSE"
              # Parse the response and check if it contains useful suggestions
              MESSAGE=$(echo $RESPONSE | jq -r '.choices[0].message.content')

              if [ "$MESSAGE" != "null" ] && [ -n "$MESSAGE" ]; then
                # Send message to Discord for each analyzed file as a separate message
                curl -X POST -H "Content-Type: application/json" -d '{
                  "content": "**Code suggestions for:** `'"$FILE"'`\n**Committer:** '"$COMMITTER_NAME"'\n**Suggestions (Performance, Code Smells):**\n```'"$LANG"'\n'"$MESSAGE"'\n```"
                }' $DISCORD_WEBHOOK_URL
              else
                # Handle case when no suggestions were found
                curl -X POST -H "Content-Type: application/json" -d '{
                  "content": "**Code suggestions for:** `'"$FILE"'`\n**Committer:** '"$COMMITTER_NAME"'\n**Suggestions (Performance, Code Smells):**\n```No significant issues found for this file.```"
                }' $DISCORD_WEBHOOK_URL
              fi
            done
          else
            echo "No code files found."
          fi
